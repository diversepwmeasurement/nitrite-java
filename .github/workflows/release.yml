jobs:
  release:
    env:
      JAVA_OPTS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      MAVEN_USERNAME: ${{ secrets.OSSRH_USER }}
      PGP_KEY_ID: ${{ secrets.PGP_KEY_ID }}
      PGP_KEY_PASSWORD: ${{ secrets.PGP_KEY_PASSWORD }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: release
    - continue-on-error: true
      uses: fregante/setup-git-user@v2
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        architecture: x64
        cache: maven
        distribution: zulu
        java-package: jdk
        java-version: 11
        server-id: ossrh
        server-password: MAVEN_PASSWORD
        server-username: MAVEN_USERNAME
    - continue-on-error: true
      env:
        PGP_KEY_PASSWORD: ${{ secrets.PGP_KEY_PASSWORD }}
      name: Prepare PGP Keys
      run: 'openssl aes-256-cbc -pass pass:"$PGP_KEY_PASSWORD" -in "$GITHUB_WORKSPACE"/.ci/secring.gpg.enc
        -out "$GITHUB_WORKSPACE"/secring.gpg -d -md md5

        mkdir -p "$HOME"/.gnupg

        cp "$GITHUB_WORKSPACE"/secring.gpg "$HOME"/.gnupg/secring.gpg

        echo "allow-loopback-pinentry" >> "$HOME"/.gnupg/gpg-agent.conf

        echo "pinentry-mode loopback" >> "$HOME"/.gnupg/gpg.conf

        gpgconf --reload gpg-agent

        '
      shell: bash
    - continue-on-error: true
      env:
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        MAVEN_USERNAME: ${{ secrets.OSSRH_USER }}
        PGP_KEY_PASSWORD: ${{ secrets.PGP_KEY_PASSWORD }}
      name: Deploy Release
      run: mvn -B -ff -ntp deploy -DskipTests -Dgpg.passphrase="$PGP_KEY_PASSWORD"
      shell: bash
name: Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
